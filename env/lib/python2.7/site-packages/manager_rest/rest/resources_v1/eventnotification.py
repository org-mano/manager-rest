from flask_restful_swagger import swagger

from manager_rest import get_version_data
from manager_rest.rest import responses
from manager_rest.rest.rest_decorators import (
    exceptions_handled,
    marshal_with,
)
from manager_rest.rest.rest_utils import (
    get_args_and_verify_arguments,
    get_json_and_verify_params,
)
from manager_rest.security import SecuredResourceSkipTenantAuth
from manager_rest.security import SecuredResource
import logging
from flask_restful import Resource

class EventNotification(Resource):

    @swagger.operation(
        responseClass=responses.EventNotification,
        nickname="eventnotification",
        notes="Returns Event Notification"
    )
    @exceptions_handled
    @marshal_with(responses.EventNotification)
    def post(self, **kwargs):
        request_schema = self.create_request_schema()
        request_dict = get_json_and_verify_params(request_schema)

        logging.info("call Event Notification POST")
        if request_dict['nfvoid']:
            logging.info("nfvoid='{0}'".format(request_dict['nfvoid']))
        if request_dict['vnfmid']:
            logging.info("vnfmid='{0}'".format(request_dict['vnfmid'])) 
        if request_dict['vnfinstanceid']:
            logging.info("vnfinstanceid='{0}'".format(request_dict['vnfinstanceid']))
        if request_dict['eventtype']:
            logging.info("eventtype='{0}'".format(request_dict['eventtype']))
        if request_dict.get('eventdescription'):
            logging.info("eventdescription='{0}'".format(request_dict.get('eventdescription')))
        if request_dict.get('jobid'):
            logging.info("jobid='{0}'".format(request_dict.get('jobid')))

        status_code = 200
        return dict(status='ok'), status_code
    def create_request_schema(self):
        request_schema = {
            'nfvoid': {'optional': False},
            'vnfmid': {'optional': False},
            'vnfinstanceid': {'optional': False},
            'eventtype': {'optional': False},
            'eventdescription': {'optional': True},
            'jobid': {'optional': True}
        }
        return request_schema
