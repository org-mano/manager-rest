import os
import shutil
import logging

from flask import current_app
from flask_restful_swagger import swagger

from manager_rest.security import SecuredResource
from manager_rest.rest import (
    rest_decorators,
    rest_utils,
)
from manager_rest.resource_manager import get_resource_manager
from manager_rest.storage import (
    get_storage_manager,
    models,
)
from manager_rest.utils import create_filter_params_list_description

from flask import request


class Insts(SecuredResource):

    @swagger.operation(
        responseClass='List[{0}]'.format(models.Inst.__name__),
        nickname="list",
        notes="Returns a list of insts.",
        parameters=create_filter_params_list_description(
            models.Inst.response_fields,
            'blueprints'
        )
    )
    @rest_decorators.exceptions_handled
    @rest_decorators.marshal_with(models.Inst)
    @rest_decorators.create_filters(models.Inst)
    @rest_decorators.paginate
    @rest_decorators.sortable(models.Inst)
    @rest_decorators.all_tenants
    def get(self, _include=None, filters=None, pagination=None, sort=None,
            all_tenants=None, **kwargs):
        """
        List uploaded insts
        """

        return get_storage_manager().list(
            models.Inst, 
            include=_include,
            filters=filters,
            pagination=pagination,
            sort=sort,
            all_tenants=all_tenants
        )


